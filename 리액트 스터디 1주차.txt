리액트 - 인터렉션이 많은 웹앱 개발용
리액트는 라이브러리!
프레임워크는 라이브러리를 포함하는 개념
왜 라이브러리인가? -> 화면 구현에 관여를 함
다른 기능들을 위해서 다른 라이브러리들을 이용함.
vue.js, angular에는 라이브러리들이 다 들어가있어서 프레임워크


컴포넌트 + 컴포넌트 + ... = 리액트
재사용성이 높다!
동시에 다른 컴포넌트를 수정


리액트는 가상돔을 사용
가상돔을 쓰는 이유는? -> 실제 웹 브라우저가 웹페이지를 렌더링하는 과정에서 DOM의 변화가 많다면 (인터렉션이 많다면) 조작하는 비용이 큼!
ex) 가상돔을 쓰지 않는다면 30개의 변화가 있을때 30번의 변화과정(dom tree, render tree, layout, paint가 한번의 과정)을 거침 but 가상돔은 diff + reconciliation으로 한번에


node.js + npm 이용
node.js는 웹브라우저가 아닌 곳에서도 자바스크립트를 사용할 수 있는 런타임
리액트를 개발할때는 필요하지 않으나 같이 쓰는 도구들이 node.js를 이용함!


웹팩(Webpack) : 오픈 소스 자바스크립트 모듈 '번들러' -> 최적화, 가독성과 유지보수에 장점
바벨(Babel) : 최신 버전 js문법을 구형 브라우저에서 사용할 수 있게 변환시켜주는 라이브러리
그러나 이제는 둘 다 필요없이 Create-React-App(npx create-react-app <폴더 이름>)으로 설치 끝.
npm 레지스트리 (라이브러리들이 저장된 곳)에서 npx 명령어를 통해 create-react-app패키지를 해당 폴더에서 실행, 리액트 설치
npm run start 를 통해 리액트 실행